{"version":3,"sources":["Key.js","AppContext.js","FiveDaysWeather/SingleDayFTemp.js","FiveDaysWeather/FiveSingle.js","FiveDaysWeather/FiveDayForecast.js","TodaysWeather/TodayOtherDetails.js","MainAutoPositon/MainPage.js","Error/Error.js","MainSearchPosition/MainSearchDisplay.js","MainSearchPosition/MainSearchBar.js","TodaysWeather/WeatherDiv.js","TodaysWeather/TodayWeather.js","Error/Loading.js","Error/ErrorLocation.js","App.js","index.js"],"names":["url","AppContext","React","createContext","SingleDayFTemp","num","forecast","itemNo","list","main","temp","Math","floor","Main","styled","div","Image","img","FiveSingleDay","local","useContext","Date","dt_txt","toLocaleDateString","alt","src","weather","icon","fiveFar","FiveDayForecast","FiveSingle","TodayComponets","TodayOtherDetails","roundToTwo","round","wind","speed","humidity","visibility","pressure","Button","button","MainBtn","MainPage","Context","onClick","convertToC","convertToF","Error","to","Tex","p","MainSearchDisplay","tempState","description","moment","format","name","Input","input","Form","form","MainSearchBar","useState","setTWeather","setForecast","display","setDisplay","city","setCity","error","setError","setcityhandler","event","a","fetch","response","ok","json","console","log","status","preventDefault","searchFiveDay","searchWeather","onSubmit","placeholder","value","onChange","target","WeatherDiv","TodaysWeather","override","css","Loading","className","size","ErrorLocation","App","searchClicked","setSearchClicked","setTempState","setFiveFar","loading","setLoading","cel","farNum","globalContext","useEffect","navigator","geolocation","getCurrentPosition","position","coords","latitude","longitude","Object","keys","length","path","Provider","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.45db9ea3.chunk.js","sourcesContent":["\r\n\r\nexport const url = \"39a9c40b686f636e478be8e6b9c56d96\";","import React from \"react\";\r\n\r\nconst AppContext = React.createContext();\r\n\r\nexport default AppContext;","\r\n\r\n\r\nconst SingleDayFTemp = ({ forecast, itemNo }) => {\r\n\r\n    function convertToFaren(num) {\r\n\r\n        return `${Math.floor(((num - 273) * 9 / 5) + 32)} F`\r\n    }\r\n\r\n    return <p>Temp: {forecast.list && convertToFaren(forecast.list[itemNo].main.temp)}</p>\r\n}\r\n\r\nexport default SingleDayFTemp;","import { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AppContext from \"../AppContext\";\r\nimport SingleDayFTemp from \"./SingleDayFTemp\";\r\n\r\n\r\nconst Main = styled.div`\r\n\r\nwidth: 15%;\r\nheight: 20%;\r\nfont-size: 0.8rem;\r\n\r\nbackground-Color: #0F5A80;\r\ntext-align: center;\r\n\r\n  @media (max-width: 770px) {\r\n \r\n        width: 20%;\r\n        height: 15%;\r\n        margin: 0 2px;\r\n     font-size: 0.8rem;\r\n  }\r\n\r\n`\r\n\r\n\r\nconst Image = styled.img`\r\nheight: 70%;\r\nwidth: 70%;\r\n\r\n`\r\n\r\n\r\n\r\nconst FiveSingleDay = ({ forecast, itemNo }) => {\r\n\r\n    const local = useContext(AppContext);\r\n\r\n    function convertToCelsius(num) {\r\n        return Math.floor(num - 273);\r\n\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <Main>\r\n            <h5>{new Date(forecast.list[itemNo].dt_txt).toLocaleDateString()}</h5>\r\n            <Image alt=\"My Cloud\" src={` http://openweathermap.org/img/wn/${forecast.list[itemNo].weather[0].icon}@2x.png`} />\r\n            {!local.fiveFar && <p>Temp: {convertToCelsius(forecast.list[itemNo].main.temp) + \"C\"}</p>}\r\n            {local.fiveFar && <SingleDayFTemp forecast={forecast} itemNo={itemNo} />}\r\n        </Main>\r\n    );\r\n}\r\n\r\nexport default FiveSingleDay;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport FiveSingleDay from \"./FiveSingle\";\r\n\r\n\r\nconst Main = styled.div`\r\n\r\ndisplay: flex;\r\njustify-content: space-between;\r\nalign-content: center;\r\ntext-align: center;\r\n\r\n  @media (max-width: 770px) {\r\n \r\n \r\n    // width: ;\r\n   \r\n    //  font-size: 0.8rem;\r\n  }\r\n\r\n`\r\n\r\n\r\n\r\n\r\n\r\nconst FiveDayForecast = ({ forecast }) => {\r\n\r\n\r\n    return (\r\n\r\n        <div>\r\n            {forecast.list &&\r\n\r\n                <Main>\r\n\r\n                    <FiveSingleDay forecast={forecast} itemNo={3} />\r\n                    <FiveSingleDay forecast={forecast} itemNo={11} />\r\n                    <FiveSingleDay forecast={forecast} itemNo={19} />\r\n                    <FiveSingleDay forecast={forecast} itemNo={27} />\r\n                    <FiveSingleDay forecast={forecast} itemNo={35} />\r\n\r\n                </Main>\r\n            }\r\n        </div>\r\n\r\n\r\n    )\r\n};\r\n\r\n\r\nexport default FiveDayForecast; ","import styled from \"styled-components\";\r\n\r\n\r\nconst TodayComponets = styled.div`\r\nbackground-Color: #0F5A80;\r\nheight: 10rem;\r\nwidth: 22.5rem;\r\n\r\ntext-align: center;\r\nmargin: 0.5rem; 1rem;\r\n\r\n\r\n  @media (max-width: 1000px) {\r\n \r\n    height: 30%;\r\n    width: 30%;\r\n    \r\n     font-size: 0.8rem;\r\n\r\n     text-align: center;\r\n  }\r\n\r\n\r\n\r\n\r\n`\r\n\r\nconst Main = styled.div`\r\nheight: 20rem;\r\nwidth: 100%;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n\r\n align-content: space-evenly;\r\n text-align: center;\r\n\r\n  @media (max-width: 1000px) {\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n\r\n    align-content: space-evenly;\r\n    height: 20rem;\r\n    width: 100%;\r\n    \r\n     font-size: 0.8rem;\r\n       text-align: center;\r\n  }\r\n\r\n`\r\n\r\n\r\n\r\nconst TodayOtherDetails = ({ weather }) => {\r\n\r\n    function roundToTwo(num) {\r\n        return +(Math.round(num + \"e+2\") + \"e-2\");\r\n    }\r\n\r\n    return (\r\n        <Main>\r\n            <TodayComponets>\r\n                <p>Wind Status</p>\r\n                <h2>{weather.wind && weather.wind.speed} m/s</h2>\r\n            </TodayComponets>\r\n            <TodayComponets>\r\n                <p>Humidity</p>\r\n                <h2>{weather.main && weather.main.humidity}%</h2>\r\n            </TodayComponets>\r\n            <TodayComponets>\r\n                <p>Visibility</p>\r\n                <h2>{weather && roundToTwo(weather.visibility * 0.000621)} miles</h2>\r\n            </TodayComponets>\r\n            <TodayComponets>\r\n                <p>Air Pressure</p>\r\n                <h2>{weather.main && roundToTwo(weather.main.pressure / 1000)} atm </h2>\r\n            </TodayComponets>\r\n\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default TodayOtherDetails;","\r\nimport { useContext } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport AppContext from \"../AppContext\";\r\nimport FiveDayForecast from \"../FiveDaysWeather/FiveDayForecast\";\r\nimport TodayOtherDetails from \"../TodaysWeather/TodayOtherDetails\";\r\n\r\n\r\nexport const Button = styled.button`\r\nheight: 2rem;\r\nwidth: 2rem;\r\nborder-radius: 0.5rem;\r\nfont-size: 1rem\r\n\r\n`\r\n\r\nconst MainBtn = styled.div`\r\nleft: 0;\r\n\r\n\r\n`\r\n\r\n\r\n\r\n\r\nconst MainPage = ({ weather, forecast }) => {\r\n\r\n    const Context = useContext(AppContext);\r\n\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n        <div>\r\n            <MainBtn>\r\n                <Button onClick={Context.convertToC} >C</Button>\r\n                <Button onClick={Context.convertToF}>F</Button>\r\n            </MainBtn>\r\n            <FiveDayForecast forecast={forecast} />\r\n            <h3>Todays Highlights</h3>\r\n            <TodayOtherDetails weather={weather} />\r\n\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n\r\n}\r\n\r\n\r\nexport default MainPage;\r\n","import { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction Error() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Invalid City</h2>\r\n            <Link to=\"/\"> <button>  Home </button></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Error;","import moment from \"moment\";\r\nimport { useContext } from \"react\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport AppContext from \"../AppContext\";\r\n\r\n\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 50%;\r\n  height: 90%;\r\n  align-content: flex-end;\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  left: 0;\r\n\r\n//     @media (max-width: 770px) {\r\n \r\n//      display: flex;\r\n//      flex-direction: row;\r\n     \r\n//      justify-content: space-evenly;\r\n//      align-content: center;\r\n//      width: 40%;\r\n//     height: 80%;\r\n    \r\n//      font-size: 0.8rem;\r\n//   }\r\n\r\n @media (max-width: 770px) {\r\n \r\n        width: 100%;\r\n        height: 70%;\r\n    \r\n     font-size: 0.8rem;\r\n  }\r\n\r\n`\r\n\r\nconst Image = styled.img`\r\nheight: 25rem;\r\nwidth: 15rem;\r\n\r\n @media (max-width: 770px) {\r\n        \r\n        height: 15rem;\r\n        width: 10rem;\r\n  }\r\n\r\n`\r\nconst Tex = styled.p`\r\nfont-size: 2.5rem;\r\nmargin: 1.2rem 0;\r\n\r\n\r\n   @media (max-width: 770px) {\r\n        \r\n        font-size: 1.2rem;\r\n        margin: 0;\r\n  }\r\n\r\n`\r\n\r\n\r\n\r\n\r\nconst MainSearchDisplay = ({ weather }) => {\r\n    const Context = useContext(AppContext)\r\n\r\n    return (\r\n        <Main>\r\n            <Link to=\"/\"><button>Go back</button></Link>\r\n            <div>\r\n\r\n                {weather.weather && <Image alt=\"cloud\" src={` http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />}\r\n\r\n            </div>\r\n            <div>\r\n                <Tex>{Context.tempState}</Tex>\r\n                <Tex>{weather.weather && weather.weather[0].description}</Tex>\r\n\r\n            </div>\r\n\r\n            <div>\r\n                <p>{moment().format('MMMM Do YYYY')}</p>\r\n\r\n                <p><GoLocation /> - {weather && weather.name}</p>\r\n            </div>\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default MainSearchDisplay;","\r\nimport { useState } from \"react\";\r\nimport { AiOutlineSearch } from \"react-icons/ai\";\r\n\r\nimport styled from \"styled-components\";\r\nimport Error from \"../Error/Error\";\r\nimport { url } from \"../Key\";\r\nimport MainPage from \"../MainAutoPositon/MainPage\";\r\n\r\n\r\nimport MainSearchDisplay from \"./MainSearchDisplay\";\r\n\r\n\r\n\r\nconst Main = styled.div`\r\n\r\ndisplay: flex;\r\njustify-content: space-evenly;\r\nalign-content: center;\r\n  @media (max-width: 770px) {\r\n \r\n    display: block;\r\n    width: 100vw;\r\n    height: 100vh;\r\n    \r\n     font-size: 0.8rem;\r\n  }\r\n\r\n\r\n`\r\n\r\nconst Input = styled.input`\r\n padding: 10px;\r\n  font-size: 17px;\r\n  border: 1px solid grey;\r\n  float: left;\r\n  width: 70%;\r\n  background: #f1f1f1;\r\n   height: 100%;\r\n\r\n`\r\n\r\nconst Button = styled.button`\r\n float: left;\r\n  width: 30%;\r\n  padding: 10px;\r\n  background: #2196F3;\r\n  color: white;\r\n  font-size: 17px;\r\n  height: 100%;\r\n  border: 1px solid grey;\r\n  border-left: none; /* Prevent double borders */\r\n  cursor: pointer;\r\n\r\n  &:hover{\r\n      background: #0b7dda;\r\n  }\r\n\r\n\r\n`\r\n\r\nconst Form = styled.form`\r\n  box-sizing: border-box;\r\n  width: 100%;\r\n   float: left;\r\n   left: 0;\r\n\r\n`\r\n\r\n\r\n\r\nconst MainSearchBar = () => {\r\n\r\n\r\n    const [weather, setTWeather] = useState({});\r\n    const [forecast, setForecast] = useState({});\r\n    const [display, setDisplay] = useState(false);\r\n    const [city, setCity] = useState('');\r\n    const [error, setError] = useState(false);\r\n\r\n\r\n    function setcityhandler(event) {\r\n        event.preventDefault()\r\n\r\n        setDisplay(true);\r\n\r\n        async function searchWeather() {\r\n            try {\r\n                const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${url}`)\r\n\r\n\r\n                if (response.ok) {\r\n                    const json = await response.json();\r\n                    setTWeather(json)\r\n\r\n\r\n\r\n                    console.log(json)\r\n                    return json\r\n\r\n                } else {\r\n                    setError(true);\r\n\r\n                    throw new Error('There was an error' + response.status)\r\n                }\r\n\r\n            } catch (error) {\r\n\r\n                setError(true);\r\n\r\n                console.log(error)\r\n            }\r\n\r\n        }\r\n\r\n        async function searchFiveDay() {\r\n            try {\r\n                const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?q=${city}&appid=${url}`)\r\n\r\n\r\n\r\n\r\n\r\n                if (response.ok) {\r\n                    const json = await response.json();\r\n                    setForecast(json)\r\n\r\n\r\n                    console.log(json.list)\r\n                    return json\r\n\r\n                } else {\r\n                    setError(true);\r\n\r\n                    throw new Error('There was an error' + response.status)\r\n                }\r\n\r\n            } catch (error) {\r\n                setError(true);\r\n                console.log(error)\r\n            }\r\n\r\n        }\r\n        searchFiveDay();\r\n        searchWeather();\r\n\r\n        console.log(city)\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n\r\n            {!display && !error && <Form onSubmit={setcityhandler} >\r\n                <Input placeholder=\"Search location\" value={city} onChange={(event) => setCity(event.target.value)} />\r\n                <Button onClick={setcityhandler}>Search <AiOutlineSearch /></Button>\r\n\r\n            </Form >}\r\n\r\n            {display && !error && <Main>\r\n\r\n\r\n                <MainSearchDisplay weather={weather} />\r\n                <MainPage forecast={forecast} weather={weather} />\r\n\r\n\r\n\r\n            </Main>}\r\n            {error && <Error />}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MainSearchBar;","import moment from \"moment\";\r\nimport { useContext } from \"react\";\r\nimport { GoLocation } from \"react-icons/go\";\r\nimport styled from \"styled-components\";\r\nimport AppContext from \"../AppContext\";\r\n\r\n\r\n\r\nconst Main = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  width: 100%;\r\n  height: 100vh;\r\n  align-content: flex-end;\r\n  text-align: center;\r\n  font-size: 1rem;\r\n  left: 0;\r\n\r\n    @media (max-width: 770px) {\r\n \r\n        width: 100%;\r\n        height: 50%;\r\n    \r\n     font-size: 0.8rem;\r\n  }\r\n\r\n   \r\n\r\n`\r\n\r\nconst Image = styled.img`\r\nheight: 25rem;\r\nwidth: 15rem;\r\n\r\n  @media (max-width: 770px) {\r\n        \r\n        height: 15rem;\r\n        width: 10rem;\r\n  }\r\n\r\n`\r\n\r\nconst Tex = styled.p`\r\nfont-size: 2.5rem;\r\nmargin: 1.2rem 0;\r\n\r\n    @media (max-width: 770px) {\r\n        \r\n        font-size: 1.2rem;\r\n        margin: 0;\r\n  }\r\n\r\n`\r\n\r\n\r\nconst WeatherDiv = ({ weather }) => {\r\n    const Context = useContext(AppContext)\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n\r\n\r\n        <Main>\r\n            {weather.weather && <Image alt=\"cloud\" src={` http://openweathermap.org/img/wn/${weather.weather[0].icon}@2x.png`} />}\r\n            <Tex>{Context.tempState}</Tex>\r\n            <Tex>{weather.weather && weather.weather[0].description}</Tex>\r\n\r\n            <div>\r\n                <p>{moment().format('MMMM Do YYYY')}</p>\r\n\r\n                <p><GoLocation /> - {weather && weather.name}</p>\r\n            </div>\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default WeatherDiv;","import { Link } from \"react-router-dom\";\r\nimport styled from \"styled-components\";\r\nimport WeatherDiv from \"./WeatherDiv\"\r\n\r\n\r\nconst Main = styled.div`\r\nleft: 0;\r\n`\r\n\r\n\r\n\r\nconst TodaysWeather = ({ weather }) => {\r\n\r\n\r\n\r\n    return (\r\n        <Main>\r\n            <Link to=\"/search\"><button>Search for place</button></Link>\r\n            <WeatherDiv weather={weather} />\r\n\r\n        </Main>\r\n    )\r\n}\r\n\r\nexport default TodaysWeather;","\r\nimport { css } from \"@emotion/react\";\r\nimport ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\n// Can be a string as well. Need to ensure each key-value pair ends with ;\r\nconst override = css`\r\n  display: block;\r\n  margin: 0 auto;\r\n  border-color: red;\r\n`;\r\n\r\nfunction Loading() {\r\n    // let [loading, setLoading] = useState(true);\r\n    // let [color, setColor] = useState(\"#ffffff\");\r\n\r\n    return (\r\n        <div className=\"sweet-loading\">\r\n            {/* <button onClick={() => setLoading(!loading)}>Toggle Loader</button>\r\n            <input value={color} onChange={(input) => setColor(input.target.value)} placeholder=\"Color of the loader\" /> */}\r\n\r\n            <ClipLoader css={override} size={150} />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Loading;","\r\n\r\nimport { Link } from \"react-router-dom\";\r\n\r\n\r\n\r\nfunction ErrorLocation() {\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h2>Please accept request to use location</h2>\r\n            <Link to=\"/\"> <button>  Home </button></Link>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ErrorLocation;","import React, { useEffect, useState } from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport { url } from \"./Key\";\nimport MainPage from \"./MainAutoPositon/MainPage\";\nimport MainSearchBar from \"./MainSearchPosition/MainSearchBar\";\nimport TodaysWeather from \"./TodaysWeather/TodayWeather\";\nimport AppContext from \"./AppContext\";\nimport Loading from \"./Error/Loading\";\nimport ErrorLocation from \"./Error/ErrorLocation\";\n\n\nconst Main = styled.div`\n\ndisplay: flex;\njustify-content: space-evenly;\nalign-content: center;\n\n \n\n    @media (max-width: 770px) {\n \n    display: block;\n    width: 100vw;\n    height: 100vh;\n    \n     font-size: 0.8rem;\n  }\n\n\n`\n\n\n\n\nfunction App() {\n\n  const [weather, setTWeather] = useState({});\n  const [forecast, setForecast] = useState({});\n  const [searchClicked, setSearchClicked] = useState(false);\n  const [tempState, setTempState] = useState(\"\");\n  const [fiveFar, setFiveFar] = useState(false);\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n\n\n  //Calculating values in Celsius\n  const cel = weather.main && Math.floor(weather.main && weather.main.temp - 273.15)\n\n\n  //Calculating values in farenheight using \n  const farNum = weather.main && weather.main.temp - 273.15;\n\n  console.log(tempState);\n\n\n\n\n  function convertToF() {\n    setFiveFar(true);\n\n    setTempState(`${Math.floor(farNum * 9 / 5) + 32} F`)\n\n  }\n\n  function convertToC() {\n    setFiveFar(false);\n    setTempState(`${cel} C`)\n\n  }\n\n\n\n\n  const globalContext = {\n    convertToF,\n    tempState,\n    setTempState,\n    convertToC,\n    fiveFar,\n  }\n\n\n\n\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n\n      if (Object.keys(position).length === 0) {\n\n        setError(true);\n      }\n\n      async function searchWeather() {\n        try {\n\n          const response = await fetch(`https://api.openweathermap.org/data/2.5/weather?lat=${position.coords.latitude && position.coords.latitude}&lon=${position.coords.longitude && position.coords.longitude}&appid=${url}`)\n\n\n\n\n\n          if (response.ok) {\n            const json = await response.json();\n            setTWeather(json)\n\n\n\n            console.log(json)\n            return json\n\n          } else {\n\n            throw new Error('There was an error' + response.status)\n          }\n\n        } catch (error) {\n\n          console.log(error)\n        }\n\n      }\n\n      async function searchFiveDay() {\n        try {\n\n          const response = await fetch(`https://api.openweathermap.org/data/2.5/forecast?lat=${position.coords.latitude && position.coords.latitude}&lon=${position.coords.longitude && position.coords.longitude}&appid=${url}`)\n\n\n\n\n\n          if (response.ok) {\n            const json = await response.json();\n            setForecast(json)\n\n\n            console.log(json.list)\n            return json\n\n          } else {\n\n            throw new Error('There was an error' + response.status)\n          }\n\n        } catch (error) {\n\n          console.log(error)\n        }\n\n      }\n      searchFiveDay();\n      searchWeather();\n      setLoading(false);\n    });\n    setTempState(`${cel} C`)\n\n\n  }, [cel])\n\n  if (error && loading) {\n    return <ErrorLocation />\n  }\n\n  return (\n    <Switch>\n      <Route path=\"/search\">\n        <AppContext.Provider value={globalContext}>\n          <MainSearchBar />\n        </AppContext.Provider>\n      </Route>\n      <Route path=\"/\">\n        <Main>\n          {!loading && <AppContext.Provider value={globalContext}>\n            <TodaysWeather weather={weather} setSearchClicked={setSearchClicked} searchClicked={searchClicked} />\n            <MainPage weather={weather} forecast={forecast} searchClicked={searchClicked} />\n          </AppContext.Provider>}\n          {loading && <Loading />}\n        </Main>\n      </Route>\n    </Switch>\n\n  );\n\n}\n\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n    <BrowserRouter>\n        <App />\n    </BrowserRouter>\n    , document.getElementById('root'));\n"],"sourceRoot":""}